% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stylesheets.R
\docType{data}
\name{get_stylesheet_extdata}
\alias{get_stylesheet_extdata}
\alias{vc_summary}
\alias{vc_sources}
\alias{vc_authorship}
\alias{vc_covers}
\alias{vc_ISBNs}
\alias{vc_jointcorps}
\alias{vc_jointpersons}
\alias{vc_names}
\alias{vc_titles}
\alias{vc_viaflinks}
\alias{vp21_jointpersons}
\title{Get xslt stylesheet}
\format{
`get_stylesheet_extdata` - path to stylesheet

'vc_summary' An xsl stylesheet as an object of
class character of length 1.

'vc_sources' An xsl stylesheet as an object
of class character of length 1.

'vc_authorship' An xsl stylesheet as an object
of class character of length 1.

'vc_covers' An xsl stylesheet as an object of class
character of length 1.

'vc_ISBNs' An xsl stylesheet as an object of class
character of length 1.

'vc_jointcorps' An xsl stylesheet as an object
of class character of length 1.

'vc_jointpersons' An xsl stylesheet as an object
of class character of length 1.

'vc_names' An xsl stylesheet as an object
of class character of length 1.

'vc_titles' An xsl stylesheet as an object
of class character of length 1.

'vc_viaflinks' An xsl stylesheet as an object
of class character of length 1.

An object of class \code{character} of length 1.
}
\usage{
get_stylesheet_extdata(name = NULL)

vc_summary

vc_sources

vc_authorship

vc_covers

vc_ISBNs

vc_jointcorps

vc_jointpersons

vc_names

vc_titles

vc_viaflinks

vp21_jointpersons
}
\arguments{
\item{name}{The name of the stylesheet.}
}
\value{
Loaded xslt stylesheet
}
\description{
`get_stylesheet_extdata` gets an xslt stylesheet
from the external data folder.
}
\details{
'vc_summary' produces an xml file with one row.
Example:
\preformatted{
<summary viafid="22826335"
viafrVersion="0.4.0" processDate="2024-04-26 06:04:26.381083">
<row>
<viafID class="character">22826335</viafID>
<viafType class="character">Personal</viafType>
<name class="character">Hotez, Peter J.</name>
<gender class="character">male</gender>
<birthDate class="Date">1958-05-05</birthDate>
<deathDate class="Date">0</deathDate>
<dateType class="character">lived</dateType>
<nationalities class="character">US,XX</nationalities> # 2-letter codes only
<affiliations class="integer">5</affiliations>
<sourceCount class="integer">15</sourceCount>
<uniqueISBNs class="integer">31</uniqueISBNs>
<coauthorsPersonal class="integer">12</coauthorsPersonal>
<coauthorsCorp class="integer">0</coauthorsCorp>
<viaf-update class="POSIXct">2024-04-09T07:46:16.176845+00:00</viaf-update>
</row>
</summary>
}

'vc_sources' produces an xml file with multiple rows.
A viaf.xml record repeats the same source ids throughout. In this package,
the source ids are extracted with this xsl only. The user must extract these
source ids to link to processed source marc21.xml files.
Example:
\preformatted{
<summary viafid="2556873"
viafrVersion="0.4.1" processDate="2024-05-01 02:55:08.434356">
<row>
<viafID class="character">2556873</viafID>
<nsid class="character">ncf11461894</nsid>
<sparse class="logical"/>
<s class="character">CAOONL</s>
<sid class="character">CAOONL|ncf11461894</sid>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</summary>
}

'vc_authorship' produces an xml file with multiple rows. It combines
corporate joint author, personal joint author, ISBN, covers, and titles data
in a single output. Because they have the same columns, they can be combined
in a single tibble. In the example below, tag ''pos'' is the position of the
element in the ''relType'' listing and is included because the VIAF cluster
appears to descendingly rank these by the number of sources.
Example:
\preformatted{
<authorship viafid="2556873"
viafrVersion="0.4.1" processDate="2024-05-01 02:55:08.434356">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">person</relType>
<pos class="integer">1</pos>
<source class="character">BNF</source>
<value class="character">Halsey, Susan D.</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">isbn</relType>
<pos class="integer">1</pos>
<source class="character">BNF</source>
<value class="character">9780444015600</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</authorship>
}

'vc_covers' produces an xml file with multiple rows. Because
corporate joint author, personal joint author, ISBN, covers, and titles
data they have the same columns, they can be combined
in a single tibble. In the example below, tag ''pos'' is the position of the
element in the ''relType'' listing and is included because the VIAF cluster
appears to descendingly rank these by the number of sources.
Example:
\preformatted{
<covers viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 03:10:59.403286">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">cover</relType>
<pos class="integer">1</pos>
<source class="character">LC</source>
<value class="character">0761806997</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">cover</relType>
<pos class="integer">2</pos>
<source class="character">LC</source>
<value class="character">0761806989</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
</covers>
}

'vc_ISBNs' produces an xml file with multiple rows. Because
corporate joint author, personal joint author, ISBN, covers, and titles
data they have the same columns, they can be combined
in a single tibble. In the example below, tag ''pos'' is the position of the
element in the ''relType'' listing and is included because the VIAF cluster
appears to descendingly rank these by the number of sources.
Example:
\preformatted{
<ISBNs viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 03:28:32.76746">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">isbn</relType>
<pos class="integer">1</pos>
<source class="character">BNF</source>
<value class="character">9780444015600</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</ISBNs>
}

'vc_jointcorp' produces an xml file with multiple rows. Because
corporate joint author, personal joint author, ISBN, covers, and titles
data they have the same columns, they can be combined
in a single tibble. In the example below, tag ''pos'' is the position of the
element in the ''relType'' listing and is included because the VIAF cluster
appears to descendingly rank these by the number of sources.
Example:
\preformatted{
<jointcorps viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 03:31:22.394016">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">corporate</relType>
<pos class="integer">1</pos>
<source class="character">ISNI</source>
<value class="character">
International symposium on coastal ocean space utilization 01 1989
</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</jointcorps>
}

'vc_jointperson' produces an xml file with multiple rows. Because
corporate joint author, personal joint author, ISBN, covers, and titles
data they have the same columns, they can be combined
in a single tibble. In the example below, tag ''pos'' is the position of the
element in the ''relType'' listing and is included because the VIAF cluster
appears to descendingly rank these by the number of sources.
Example:
\preformatted{
<jointpersons viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 03:37:00.178212">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">person</relType>
<pos class="integer">1</pos>
<source class="character">BNF</source>
<value class="character">Halsey, Susan D.</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</jointpersons>
}

'vc_names' produces an xml file with multiple rows. The 'preferred'
variable is TRUE if a preferred form, FALSE if an alternate form.

When there is no normalized form in the viaf.xml, it is computed
in viafxml2df.

In the following examples of stylesheet output, the top example
is of a ns1:mainHeadingEl element. This has no normalized form,
so the ns1:datafield element in the viaf.xml is simply copied
for downstream processing. The bottom example is a normalized
form that was in ns1:datafield/ns1:normalized element in the viaf.xml.

\preformatted{
 <row>
   <viafID ct="character">103358509</viafID>
   <viafType ct="character">Personal</viafType>
   <preferred ct="logical">TRUE</preferred>
   <tag ct="character">100</tag>
   <normName ct="character" postnm="TRUE" src="BIBSYS">
     <datafield dtype="MARC21" ind1="1" ind2=" " tag="100">
       <subfield code="a">Kennedy, Robert F.</subfield>
       <subfield code="d">1954 -</subfield>
     </datafield>
   </normName>
   <dispName ct="character">Kennedy, Robert F. 1954 -</dispName>
   <source ct="character">BIBSYS</source>
   <linkcount ct="integer">22</linkcount>
   <viaf-update ct="POSIXct">2024-05-17T06:03:32.847036+00:00</viaf-update>
   <accessed ct="POSIXct">2024-05-24 00:18:40.756291</accessed>
 </row>
...
<row>
   <viafID ct="character">103358509</viafID>
   <viafType ct="character">Personal</viafType>
   <preferred ct="logical">FALSE</preferred>
   <tag ct="character">400</tag>
   <normName ct="character">kennedy robert f jr</normName>
   <dispName ct="character">Kennedy, Robert F. Jr</dispName>
   <source ct="character">ISNI</source>
   <linkcount ct="integer">0</linkcount>
   <viaf-update ct="POSIXct">2024-05-17T06:03:32.847036+00:00</viaf-update>
   <accessed ct="POSIXct">2024-05-24 00:18:40.756291</accessed>
 </row>
...
</names>
}

'vc_titles' produces an xml file with multiple rows.
Example:
\preformatted{
<titles viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 05:08:02.309578">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<relType class="character">title</relType>
<pos class="integer">1</pos>
<source class="character">BNF</source>
<value class="character">
Coastal ocean space utilization proceedings of the First International
symposium on coastal ocean space utilization (COSU '89) held
May 8-10, 1989 in New York
</value>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</titles>
}

'vc_viaflinks' produces an xml file with multiple rows. These links
make up the VIAF cluster.
Example:
\preformatted{
<viaflinks viafid="2556873" viafrVersion="0.4.1"
processDate="2024-05-01 03:40:28.592271">
<row>
<viafID class="character">2556873</viafID>
<viafType class="character">Personal</viafType>
<namevalue class="character">Abel, Robert Berger</namevalue>
<tag class="character">200</tag>
<fromSource class="character">BNF</fromSource>
<toSource class="character">DNB</toSource>
<matchtype class="character">forced single date</matchtype>
<viaf-update class="POSIXct">2024-01-21T21:31:37.205257+00:00</viaf-update>
</row>
...
</viaflinks>
}

'vp21_jointpersons' produces an xml file with multiple rows.
}
\seealso{
\link{cluster_summary}

\link{cluster_sources}

\link{cluster_authorship}

\link{cluster_covers}

\link{cluster_ISBNs}

\link{cluster_jointcorps}

\link{cluster_jointpersons}

\link{cluster_names}

\link{cluster_titles}

\link{cluster_links}
}
\keyword{xsl}
